//定义插件
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

//read from local.properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bintrayApiKey = properties.getProperty('bintrayApiKey')

ext {
    groupId = "com.hwilliamgo"
    artifactId = "fastviewtree"
    user = "huangwilliam33333"
    repo = 'maven'
    dryRun = false
    apiKey = bintrayApiKey
}

//打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
    archiveClassifier = 'sources'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            //源码
            artifact sourcesJar

            //javadoc
            //artifact javadocJar

            //aar
            artifact("$buildDir/outputs/aar/${artifactId}-release.aar")

            //meta info
            groupId project.ext.groupId
            artifactId project.ext.artifactId
            version rootProject.versionName

            //pom文件的依赖
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        //过滤掉一些无用的依赖
//                        if (it.name == "kotlin-android-extensions-runtime") {
//                            return
//                        }
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = project.ext.user
    key = project.ext.apiKey
    pkg {
        repo = project.ext.repo
        name = project.ext.artifactId
        userOrg = project.ext.user
        version {
            name = rootProject.versionName
            released = new Date()
        }
        dryRun = project.ext.dryRun
    }
    publications = ['MyPublication']
}